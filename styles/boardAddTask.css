.addTask-footer {
  display: none;
}

.overlayAddTask {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2;
}

.d-noneHeader {
  display: none;
}

.form {
  background-color: var(--bg-color);
  display: flex;
  flex-direction: column;
  height: 755px;
  width: 973px;
  margin-right: auto;
  margin-left: auto;
  padding: 50px;
  border-radius: 30px;
  gap: 8px;
}

.animate-in {
  animation: slideIn 0.3s ease forwards;
}

@keyframes slideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.animate-out {
  animation: slideOut 0.3s ease forwards;
}

@keyframes slideOut {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

.animate-rotate {
  animation: rotate 0.3s ease forwards;
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
    transform-origin: bottom left;
  }
  100% {
    transform: rotate(4deg);
    transform-origin: bottom left;
  }
}

.animate-straight {
  animation: straight 0.3s ease forwards;
}

@keyframes straight {
  0% {
    transform: rotate(10deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

.formTransform {
  transform: translateX(100%);
  opacity: 0;
  transition: transform 0.3s ease, opacity 0.3s ease;
}

.form > .AddTaskContentContainer {
  flex-grow: 1;
  overflow-y: auto;
}

.hedalineAddTask {
  display: flex;
  justify-content: space-between;
}

.hedalineAddTask__headline {
  font-size: 61px;
}

.hedalineAddTask__closeBtn {
  display: flex;
  height: 32px;
  justify-content: center;
  width: 32px;
  border-radius: 50%;
  border: none;
  background-color: var(--bg-color);
}

.hedalineAddTask__closeBtn:hover {
  cursor: pointer;
  background-color: var(--snd-color);
}

.AddTaskContentContainer {
  display: flex;
  height: 360px;
}

.seperator {
  width: 1px;
  background-color: var(--snd-color);
  margin-left: 32px;
  margin-right: 32px;
  height: 370px;

}

.priority {
  display: flex;
  flex-direction: column;
  gap: 25px;
  overflow-y: auto;
}

.column {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.typeOfTask {
  display: flex;
  flex-direction: column;
  width: 400px;
  height: 360px;
  gap: 15px;
  overflow-y: auto;
}

.priorityBtn {
  width: 136px;
  height: 45px;
  background-color: white;
  border-radius: 8px;
  box-shadow: 0px 0px 4px var(--snd-color);
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}

.priorityBtn:hover {
  box-shadow: 0px 4px 3px var(--snd-color);
}

.priorityBtn img {
  margin-left: 8px;
}

.choose {
  display: flex;
  align-items: center;
  width: 100%;
  gap: 8px;
}

.inputSelectContact {
  position: relative;
  width: 100%;
}

.container ul {
  margin-block-start: 0px;
  margin-block-end: 0px;
  padding-inline-start: 0px;
}



.options {
  max-height: 0px;
  overflow-y: auto;
  transition: all 0.2s ease;
  padding: 0;
  margin: 0;
}

.inputFlex {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.select {
  border: 1px solid var(--snd-color);
  border-radius: 8px;
  width: 100%;
  padding-block: 8px;
  padding-inline-start: 16px;
  padding-inline-end: 8px;
  font-size: 16px;
  cursor: pointer;
  height: 38px;
}

select:focus {
  border-color: var(--focus-color);
  outline: none;
}

.inputSelectContact {
  position: relative;
  width: 100%;
}

.assignedBg:hover {
  background: var(--selected-hover-bg) !important;
}

.activeLink {
  background-color: var(--selected-hover-bg);
}

.inputStyleArrow {
  cursor: pointer;
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  height: 24px;
  width: 24px;
  object-fit: cover;
}

.inputStyleArrow:hover {
  background-color: #d1d1d1;
  border-radius: 25px;
}

.category {
  background-color: white;
  border-radius: 8px;
}

.category li {
  cursor: pointer;
  border: 1px solid white;
}

.optionsCategory {
  background-color: white;
  border-radius: 8px;
  width: 100%;
  height: 56px;
  padding-block: 8px;
  padding-inline: 16px;
  font-size: 16px;
}

.optionsCategory:hover {
  background-color: var(--snd-color);
}

.options__category {
  background-color: white;
  border-radius: 8px;
  width: 100%;
  padding-block: 8px;
  padding-inline: 16px;
  font-size: 16px;
}

.options__category:hover {
  background-color: var(--snd-color);
}

.border-color {
  border-color: var(--focus-color);
}

.show {
  max-height: 157px;
}

.priorityUrgentBg {
  background-color: var(--priority-urgent-bg);
  color: white;
  font-weight: bold;
}

.priorityMediumBg {
  background-color: var(--priority-medium-bg);
  color: white;
  font-weight: bold;
}

.priorityLowBg {
  background-color: var(--priority-low-bg);
  color: white;
  font-weight: bold;
}

.checkBox {
  width: 13px !important;
  display: flex;
  justify-content: space-between;
  align-items: center;
  display: none;
}

.checkBoxImg {
  height: 18px;
  object-fit: cover;
  height: 18px;
  border-radius: 50%;
  background-color: transparent;
}

.checkBoxImg:hover {
  background-color: white;
  height: 18px;
  border-radius: 50%;
}

.filterChecked {
  filter: brightness(0) invert(1);
  height: 18px;
  border-radius: 50%;
  background-color: transparent;
}

.filterChecked:hover {
  background-color: white;
  height: 18px;
  border-radius: 50%;
  transition: all 200ms ease-in;
}

.assignedBg {
  background-color: var(--darkBtn-color) !important;
  color: white;
}

.cancelOrCheck {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  right: 12px;
  top: 56%;
  cursor: pointer;
}

.cancelOrCheck img {
  height: 20px;
  width: 20px;
  object-fit: contain;
}

.subTasksSeperator {
  width: 1px;
  background-color: var(--snd-color);
  margin-left: 2px;
  margin-right: 2px;
  height: 20px;
}

#subTasks {
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  height: 120px;
}

#subTasks input {
  border: none;
  font-size: 14px;
  background-color: transparent;
  padding-block: 4px;
  padding-inline: 8px;
}

.editOrTrash {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  right: 12px;
  top: 10%;
  cursor: pointer;
}

.editOrTrash img {
  height: 20px;
  width: 20px;
  object-fit: contain;
}

.subTasksSeperatorSecond {
  width: 1px;
  background-color: var(--seperator-snd-color);
  margin-left: 2px;
  margin-right: 2px;
  height: 20px;
}

.activeInput {
  background-color: white !important;
  border-radius: 0;
  border-bottom: 1px solid var(--focus-color) !important;
  padding-inline: 16px !important;
}

.relative {
  position: relative;
  display: flex;
  align-items: center;
  border-radius: 8px;
}

.relative:hover {
  background-color: var(--snd-color);
}

.relative input,
.relative img {
  background-color: transparent;
}

div[id^="bullet"] {
  height: 5px;
  width: 5px;
  border-radius: 50%;
  background-color: black;
  margin-left: 16px;
}

.columnSubTask {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: start;
  justify-content: center;
}

input,
textarea {
  border: 1px solid var(--snd-color);
  border-radius: 8px;
  width: 100%;
  padding-block: 8px;
  padding-inline: 16px;
  font-size: 16px;
  cursor: pointer;
}

.plusIcon {
  position: absolute;
  height: 20px;
  width: 20px;
  object-fit: contain;
  right: 12px;
  top: 55%;
  cursor: pointer;
}

mark {
  background-color: var(--bg-color);
  color: red;
}

.marked {
  display: flex;
}

.markedFields span {
  display: flex;
  font-size: 14px;
}

.markedFieldsResponsive span {
  display: flex;
  font-size: 14px;
}

.inputError {
  border: 1px solid var(--error-color);
}

#errorTitle,
#errorDate {
  font-size: 10px;
  color: var(--error-color);
  margin-top: 4px;
}

.flexButtons {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 16px;
}

.clear {
  background-color: white;
  border: 1px solid;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.clear .hoverIcon {
  display: none;
}

.clear:hover .defaultIcon {
  display: none;
}

.clear:hover .hoverIcon {
  display: block;
}

.clear:hover {
  box-shadow: 0px 4px 3px var(--snd-color);
  border-color: var(--focus-color);
  color: var(--focus-color);
}

.buttons {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
}

.buttons button {
  padding: 12px 10px;
  border-radius: 8px;
  font-size: 16px;
}

.createTask {
  background-color: var(--darkBtn-color);
  color: white;
  border: none;
  cursor: pointer;
  font-weight: bold;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.createTask:hover {
  background-color: var(--focus-color);
  box-shadow: 0px 4px 3px var(--snd-color);
}

.description {
  height: 120px;
}
.opacity {
  opacity: 0;
}

.succesTag {
  display: none;
  align-items: center;
  justify-content: center;
  gap: 46px;
  position: absolute;
  height: 74px;
  width: 317px;
  border-radius: 20px;
  background-color: var(--darkBtn-color);
  font-size: 20px;
  color: white;
}

.contacts_name_icon {
  gap: 16px;
  display: flex;
  align-items: center;
}

.plusWrapper {
  position: relative;
  display: inline-block;
}

.assignedPlusOne {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 32px;
  width: 32px;
  border-radius: 50%;
  background-color: #2A3647;
  color: white;
  font-size: 12px;
  margin-left: 5px;
  cursor: pointer;
  z-index: 1;
}

.bubbleTooltip {
  display: none;
  position: absolute;
  bottom: 110%;
  left: 50%;
  transform: translateX(-50%);
  flex-direction: column;
  background-color: transparent;
  padding: 6px;
  border-radius: 6px;
  z-index: 10;
  gap: 5px;
}

.plusWrapper:hover .bubbleTooltip {
  display: flex;
}

@media (max-width: 969px) {
  .form {
    width: 98vw;
  }
}

@media (max-width: 825px) {
  /* .form {
    padding: 25px;
    width: 760px;
  } */

  .hedalineAddTask__headline {
    font-size: 54px;
  }
}

@media (max-width: 768px) {
  .d-noneHeader {
    display: flex;
  }

  .hedalineAddTask__closeBtn {
    display: none;
  }

  .overlayTask__addTaskContent {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .form {
    width: 100vw;
    border-radius: unset;
    height: 34vh;
    flex: 1;
  }

  .AddTaskContentContainer {
    flex-direction: column;
    overflow-y: auto;
    height: 100%;
  }

  .seperator {
    display: none;
  }

  .typeOfTask {
    overflow-y: unset;
    width: 100%;
  }

  .priority {
    overflow-y: unset;
  }

  .addTask-footer {
    display: flex;
    height: 90px;
    gap: 10px;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    width: 100%;
    background-color: var(--bg-sidebar);
  }
}

@media (max-width: 545px) {
  .addTask-footer {
    height: 80px;
  }

  .form {
    height: 80vh;
  }
}